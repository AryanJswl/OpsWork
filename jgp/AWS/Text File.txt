Remotely accessing a service over the internet or intranet is called CLOUD COMPUTING.
Staiistically, 33% of websites in the internet uses aws 

==========================REGIONS OF AWS================================

26 regions	

collection of servers ---- data center  
collection of data center ---- availability zone
collection of az --- region

1 digit milli second latency between two az

300+ services in total, aws provides for ml, devops, data science

economy of scales ---- 10kg - 20 rs but if 100kg - 4rs

========================================================================

Types of cloud computing service models ---

IAAS --- Infra as a service, means cloud will provide you with networking features, storage space etc etc. Hardware and os will be managed by you.
PAAS --- Platform as a service, means cloud will provide you with os and hardware too, you just need to deploy you model. eg:- heroku. 
		 Basically you don't need to manage you virtualized platform
		 Application is the only thing, that we'll be managing
SAAS --- Software as a service, means just subscribe or login and enjoy.

Suppose you need to get a print out of your some college doc, say result card.

iaas --- you go to shop, choose a printer with desired configuration, buy it and perform the printing operation
paas --- you go to cyber cafe, give the soft copy of the doc. to cafe owner. And take the printout
saas --- you get the print out from the college itself.


Types of cloud deployment models ---
1. Public eg:- gcp, ibm bluemix, rackspace
2. Private - cloud infra dedicated to a company only, ie only the company can provision vms on the cloud.  
3. Hybrid

========================================================================

Public cloud --- get a credit card and take the server
Private cloud --- on premise cloud and could be shared by only few peoples

Q1.How to select a region?
-> 1. Customer proxmity
   2. Service availability
   3. Cost
   4. governance and compliance

=========================================================================

Virtualisation - one machine, logically segregated into multiple machines

making virtual servers (laptops kind of) using hypervisor.
And all the resources of the physical server is divided into different virtual servers

=========================================================================

AWS uses type 2 hyperviser named xen hyperviser

AWS SERVICE domains

	1. COMPUTE -- SERVERS TO RUN OUR APPLICATION 
	2. STORAGE -- MEMORY TO STORE DATA
	3. NETWORKING -- COMMUNICATION 
	4. DATABASE -- TRANSACTIONS LIKE CRUD OPERATIONS

IAM --- IDENTITY AND ACCESS MANAGEMENT under Management and governance

	Authentication --- validation of credentials 
	Authorisation --- permissions grant

IAM manages things like who has access to what
Here IDENTITY means user
IAM is a global service

Elements of iam
1. users -- Authentication
2. roles -- Authentication
3. groups -- best practice
4. policies -- Authorization

Groups are a collection of users and a user can be a part of multiple groups

Root user and admin user---

	A root user can create or delete user accounts where as admin user can't do that. Else every power is same for
	root and admin

	Root user needs to be protected as of security reasons as it is the most powerfull user. Hence, another layer of authentication is needed
	which is mfa multi factor authentication. It's same as an otp

	Also don't use root user for day to day works. Also in industry, you will not be able to use root user. So, use IAM user then


Ways to interact with aws services

	There are 3 ways

	1. Management console, ie gui or web based interface
	2. Command line interface --- programmatic access 
	3. Software development kit, ie we can build software on our own to interact with the services --- programmatic access


	All these are api's as they help to communicate to the aws console.
	IAM user needs to be granted permissions by the root user for everything he wants to do.


	Access key and secret access key --- needed when interacting through local machine
	aws login credentials --- needed when interacting through management console


================================CONFIGURE AWS IN CLI IN LOCAL MACHINE=========================================

> aws configure --- configures aws in local machine. need to give access key and secret key
		> aws s3 ls --- lists the buckets in s3
		>> syntax of aws commands --- aws {service name} {operation name} 



*** segregation of duties --- dividing the duties to different users

Profiling --- used to configure multiple users in same machine, distinguishing them by profile name like developer, ml engineer, devops engineer etc etc
> aws configure --profile {profile name} --- configures according to profile name
	eg:- aws configure --profile developer 

> aws {service name} {operation name} --profile {profile name} --- does the operation of the user in a profile
	eg:- aws s3 ls --profile developer


aws policy simulator --- checks if an operation is allowed for a user or not

IAM policies --- set of instructions which defines the permissions a user or group or role can have. It is a json based text

Types of iam policies ---
1. Inline --- can only be assigned to the user, in which it is created
2. Managed --- generic policies, ie, they can be granted to any user also many at a time
	a. aws managed
	b. customer managed

	In policy creation, resource means the service running, like one of the instances 

	In policies, a deny has higher precedence over allow

=========================IAM ROLE=================================

- credentials --- access key and secret key
- iam role is a secure way to access management console as, credentials associated with iam role is temporary or dynamically generated unlike iam user.
- Here, credentials are not managed by us, it is managed by aws. So, less chance that credentials are compromised.
- With iam role session duration is attached like 1 hr. --- new credentials are generated after every 1 hr.
- session duration can be set by us. by default, it is 1hr  
- aws provide, iam roles programmatic access, ie via cli or sdk

- there is a service named security token service (sts), it has an api called assume role api, resposible for credential generation
- credential is gerenrated in background


*** aws quota is a thing to check the limit --- in aws docs ***
*** cloud migration means migrating to cloud from on premise server ***

*** federation or IDENTITY PROVIDER --- establishing trust between two entities, like quora server and google server *** 

##### HOW TO CREATE ROLES######
docs ---- aws federation	


*** IAM Role is basically like the filming roles --- iam role and policies under the iam role are a part of a film
	and if a service or user or resource is given the iam role then he acts according to the policies and authorisation given to him
	in that film.

	eg:- suppose ec2 is given a role with authorisation according to which it can access and delete s3 storage. So, within the duration of the 
	film, ie within the duration of the role, he can do so. Once, the film, ie the duration gets over, the roles are taken back. 

		Say, here ec2 is the hero, s3 is villian, and hero has a role of a police officer, so he can arrest, shoot, beat villian, till the role is
		not taken away from him.

	Also, adding to the security, the auto generated credentials by aws for a role is authenticated within equal intervals.

============================================================================================================================

========================================================EC2=================================================================

It is a regional service.
Provide computing services.

types of ec2 --- it is based on the specification

1. general purpose --- overall great
2. memory optimized --- ram is more
3. storage optimized --- high storage
4. Acclerated computing --- balance between ram and virtual cpu, can handle sudden traffic hikes
5.	Compute optimized --- virtual cpu is more, it is not good for sudden traffic hikes, good for ml


Hyper-threading is a process by which a CPU divides up its physical cores into virtual cores that are 
treated as if they are actually physical cores by the operating system.
eg:- say there is a 10 core cpu, this cpu can be treated as one 4 core vcpu and one 6 core vcpu.

Virtual cpu (vCPU) --- Each vcpu is a hyper-thread of an Intel xeon core. 

Key pair--- private key is with you, public key in the instance. public key is decyfered using the private key and instance is launched

AMI is analogous to iso image files in case of local virtual.

Security groups allow different ip addresses to access the instances

Key pairs are region specific, one key pair in one region can't be used in another region

=============================================================================================================================

ssh protocol --- used to connect to linux machines remotely
firewall --- security system of a machine. decides, what type of traffic is allowed and what are blocked
		security group is a virtual firewall, ie firewall for virtual machines.

inbound --- traffic comming to our server
outbound --- traffic going out of server

***buckets for s3 is same as, instances for ec2*** --- instance and buckets are identifiers for ec2 and s3. 
***cli access for aws services needs secret key and access key and 'aws configure' needs to be executed***
***Think of ec2 as your another system (like your local system) in cloud with only cli mode***

*** Read aws output format *** 

> suppose i need to access s3 buckets using ec2 instance
	First of all, create ec2 instance
	Allow programmatic access for the user, ie access through cli using secret key and access key
	run the instance, now you are inside your another system
	configure the system (instance) to login the user.
	access the user
	access the services.
 
	or 

	Create a role with s3 permissions
	attach the role to the instance (Actions -> Security -> Modify IAM role)